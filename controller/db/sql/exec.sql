-- Code generated by gomarvin, v0.10.x

CREATE TABLE IF NOT EXISTS execs (
  -- init
  exec_id     uuid              DEFAULT uuid_generate_v4() PRIMARY KEY,
  created_at    TIMESTAMP         NOT NULL DEFAULT NOW(),
  updated_at    TIMESTAMP         NOT NULL DEFAULT NOW(),

  -- new columns below
  change_me     VARCHAR(300)      NOT NULL
);


-- when the row is updated, update the "updated_at" timestamp
CREATE TRIGGER set_timestamp BEFORE UPDATE ON execs
FOR EACH ROW EXECUTE PROCEDURE trigger_set_timestamp();


-- name: Exec_CountAll :one
SELECT      COUNT(*)
FROM        execs;


-- name: Exec_GetAll :many
SELECT      exec_id, created_at, change_me
FROM        execs
ORDER BY    created_at DESC;


-- name: Exec_GetAllWithPaginationFirstPage :many
SELECT      exec_id, created_at, change_me
FROM        execs
ORDER BY    created_at DESC
LIMIT       $1;


-- name: Exec_GetAllWithPaginationNextPage :many
SELECT      exec_id, created_at, change_me
FROM        execs
WHERE ( created_at <= @created_at::TIMESTAMP  OR 
      ( created_at = @created_at::TIMESTAMP   AND exec_id < @exec_id::uuid ))
ORDER BY    created_at DESC
LIMIT       @_limit::int;


-- name: Exec_GetAllWhereCreatedAt :many
SELECT      exec_id, created_at, change_me
FROM        execs
WHERE       created_at = $1
ORDER BY    created_at DESC;


-- name: Exec_GetAllBetweenDates :many
SELECT      exec_id, created_at, change_me
FROM        execs
WHERE       created_at BETWEEN SYMMETRIC $1 AND $2
ORDER BY    created_at DESC;


-- name: Exec_GetWhereChange_MeIncludes :many
SELECT      exec_id, created_at, change_me
FROM        execs
WHERE       change_me ILIKE '%' || ( $1 ) || '%'
ORDER BY    created_at DESC;


-- name: Exec_GetWhereIdEquals :one
SELECT      exec_id, created_at, change_me
FROM        execs
WHERE       exec_id = $1
LIMIT 1;


-- name: Exec_Create :one
INSERT INTO execs ( change_me )
VALUES      ( $1 )
RETURNING   *;


-- name: Exec_UpdateChange_MeWhereIdEquals :one
UPDATE      execs
SET         change_me = $1
WHERE       exec_id = $2
RETURNING   *;


-- name: Exec_DeleteWhereIdEquals :one
DELETE FROM execs
WHERE       exec_id = $1
RETURNING   *;
